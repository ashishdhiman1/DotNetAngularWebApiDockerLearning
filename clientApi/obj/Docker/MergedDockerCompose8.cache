name: dockercompose5250151815317685693
services:
  clientapi:
    build:
      context: D:\Ashish\Training\Angular Projects\Angular Assignment\AngularWebApi\AngularDotnetWebApiDockerLearning\clientApi\clientApi
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: clientApi
      target: base
    container_name: WebApiContainer
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: clientapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/clientApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      clientappnetwork: null
    ports:
      - mode: ingress
        target: 8080
        published: "8001"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Bytecode\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Bytecode\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Ashish\Training\Angular Projects\Angular Assignment\AngularWebApi\AngularDotnetWebApiDockerLearning\clientApi\clientApi
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\Ashish\Training\Angular Projects\Angular Assignment\AngularWebApi\AngularDotnetWebApiDockerLearning\clientApi\clientApi
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Bytecode\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Bytecode\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Bytecode\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Bytecode\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    container_name: sqlserver-container
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: mrAshish123#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      clientappnetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
networks:
  clientappnetwork:
    name: dockercompose5250151815317685693_clientappnetwork
    driver: bridge