name: dockercompose5250151815317685693
services:
  clientapi:
    build:
      context: D:\Ashish\Training\Angular Projects\Angular Assignment\AngularWebApi\AngularDotnetWebApiDockerLearning\clientApi\clientApi
      dockerfile: Dockerfile
    container_name: WebApiContainer
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8081"
    networks:
      clientappnetwork: null
    ports:
      - mode: ingress
        target: 8080
        published: "8001"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Bytecode\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Bytecode\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    container_name: sqlserver-container
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: mrAshish123#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      clientappnetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
networks:
  clientappnetwork:
    name: dockercompose5250151815317685693_clientappnetwork
    driver: bridge